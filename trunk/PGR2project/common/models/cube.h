//-----------------------------------------------------------------------------
//  [PGR2] Cube model
//  27/02/2008
//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------

#ifndef __CUBE_MODEL_H__
#define __CUBE_MODEL_H__

#include "../../src/settings.h"

const GLfloat CUBE_VERTEX_ARRAY[] =
{
	 -1.0f,-1.0f, 1.0f,  1.0f,-1.0f, 1.0f,  1.0f, 1.0f, 1.0f, -1.0f, 1.0f, 1.0f,
	 -1.0f,-1.0f,-1.0f, -1.0f, 1.0f,-1.0f,  1.0f, 1.0f,-1.0f,  1.0f,-1.0f,-1.0f,
	 -1.0f, 1.0f,-1.0f, -1.0f, 1.0f, 1.0f,  1.0f, 1.0f, 1.0f,  1.0f, 1.0f,-1.0f,
	 -1.0f,-1.0f,-1.0f,  1.0f,-1.0f,-1.0f,  1.0f,-1.0f, 1.0f, -1.0f,-1.0f, 1.0f,
	  1.0f,-1.0f,-1.0f,  1.0f, 1.0f,-1.0f,  1.0f, 1.0f, 1.0f,  1.0f,-1.0f, 1.0f,
	 -1.0f,-1.0f,-1.0f, -1.0f,-1.0f, 1.0f, -1.0f, 1.0f, 1.0f, -1.0f, 1.0f,-1.0f
};
const GLfloat CUBE_VERTEX_ARRAY2[] =
{
	 0.0f,0.0f, 1.0f,  1.0f,0.0f, 1.0f,  1.0f, 1.0f, 1.0f, 0.0f, 1.0f, 1.0f,
	 0.0f,0.0f,0.0f, 0.0f, 1.0f,0.0f,  1.0f, 1.0f,0.0f,  1.0f,0.0f,0.0f,
	 0.0f, 1.0f,0.0f, 0.0f, 1.0f, 1.0f,  1.0f, 1.0f, 1.0f,  1.0f, 1.0f,0.0f,
	 0.0f,0.0f,0.0f,  1.0f,0.0f,0.0f,  1.0f,0.0f, 1.0f, 0.0f,0.0f, 1.0f,
	  1.0f,0.0f,0.0f,  1.0f, 1.0f,0.0f,  1.0f, 1.0f, 1.0f,  1.0f,0.0f, 1.0f,
	 0.0f,0.0f,0.0f, 0.0f,0.0f, 1.0f, 0.0f, 1.0f, 1.0f, 0.0f, 1.0f,0.0f
};

const GLfloat CUBE_COLOR_ARRAY[] =
{
	1.0f, 0.0f, 0.0f,  0.0f, 1.0f, 0.0f,  0.0f, 0.0f, 1.0f,  1.0f, 1.0f, 0.0f,
	1.0f, 0.0f, 1.0f,  0.0f, 1.0f, 1.0f,  1.0f, 1.0f, 1.0f,  1.0f, 0.0f, 0.0f,
	0.0f, 1.0f, 1.0f,  1.0f, 1.0f, 0.0f,  0.0f, 0.0f, 1.0f,  1.0f, 1.0f, 1.0f,
	1.0f, 0.0f, 1.0f,  1.0f, 0.0f, 0.0f,  0.0f, 1.0f, 0.0f,  1.0f, 0.0f, 0.0f,
	1.0f, 0.0f, 0.0f,  1.0f, 1.0f, 1.0f,  0.0f, 0.0f, 1.0f,  0.0f, 1.0f, 0.0f,
	1.0f, 0.0f, 1.0f,  1.0f, 0.0f, 0.0f,  1.0f, 1.0f, 0.0f,  0.0f, 1.0f, 1.0f,
};

const GLfloat CUBE_TEX_COORD_ARRAY[] =
{
	 0.0f, 0.0f,  1.0f, 0.0f,  1.0f, 1.0f,  0.0f, 1.0f,
	 0.0f, 0.0f,  1.0f, 0.0f,  1.0f, 1.0f,  0.0f, 1.0f,
	 0.0f, 0.0f,  1.0f, 0.0f,  1.0f, 1.0f,  0.0f, 1.0f,
	 0.0f, 0.0f,  1.0f, 0.0f,  1.0f, 1.0f,  0.0f, 1.0f,
	 0.0f, 0.0f,  1.0f, 0.0f,  1.0f, 1.0f,  0.0f, 1.0f,
	 0.0f, 0.0f,  1.0f, 0.0f,  1.0f, 1.0f,  0.0f, 1.0f,
};

const GLfloat CUBE_NORMAL_ARRAY[] =
{
    0.0f, 0.0f, 1.0f,  0.0f, 0.0f, 1.0f,  0.0f, 0.0f, 1.0f,  0.0f, 0.0f, 1.0f,
    0.0f, 0.0f,-1.0f,  0.0f, 0.0f,-1.0f,  0.0f, 0.0f,-1.0f,  0.0f, 0.0f,-1.0f,
    0.0f, 1.0f, 0.0f,  0.0f, 1.0f, 0.0f,  0.0f, 1.0f, 0.0f,  0.0f, 1.0f, 0.0f,
    0.0f,-1.0f, 0.0f,  0.0f,-1.0f, 0.0f,  0.0f,-1.0f, 0.0f,  0.0f,-1.0f, 0.0f,
    1.0f, 0.0f, 0.0f,  1.0f, 0.0f, 0.0f,  1.0f, 0.0f, 0.0f,  1.0f, 0.0f, 0.0f,
   -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f,
};

const GLfloat CUBE_COLOR_AND_VERTEX_ARRAY[] =
{
   // <cr, cg, cb>, <vx, vy, vx>
    1.0f, 0.0f, 0.0f, -1.0f,-1.0f, 1.0f,   0.0f, 1.0f, 0.0f,  1.0f,-1.0f, 1.0f,
    0.0f, 0.0f, 1.0f,  1.0f, 1.0f, 1.0f,   1.0f, 1.0f, 0.0f, -1.0f, 1.0f, 1.0f,
    1.0f, 0.0f, 1.0f, -1.0f,-1.0f,-1.0f,   0.0f, 1.0f, 1.0f, -1.0f, 1.0f,-1.0f,
    1.0f, 1.0f, 1.0f,  1.0f, 1.0f,-1.0f,   1.0f, 0.0f, 0.0f,  1.0f,-1.0f,-1.0f,  
    0.0f, 1.0f, 1.0f, -1.0f, 1.0f,-1.0f,   1.0f, 1.0f, 0.0f, -1.0f, 1.0f, 1.0f,
    0.0f, 0.0f, 1.0f,  1.0f, 1.0f, 1.0f,   1.0f, 1.0f, 1.0f,  1.0f, 1.0f,-1.0f,
    1.0f, 0.0f, 1.0f, -1.0f,-1.0f,-1.0f,   1.0f, 0.0f, 0.0f,  1.0f,-1.0f,-1.0f,
    0.0f, 1.0f, 0.0f,  1.0f,-1.0f, 1.0f,   1.0f, 0.0f, 0.0f, -1.0f,-1.0f, 1.0f,
    1.0f, 0.0f, 0.0f,  1.0f,-1.0f,-1.0f,   1.0f, 1.0f, 1.0f,  1.0f, 1.0f,-1.0f,
    0.0f, 0.0f, 1.0f,  1.0f, 1.0f, 1.0f,   0.0f, 1.0f, 0.0f,  1.0f,-1.0f, 1.0f,
    1.0f, 0.0f, 1.0f, -1.0f,-1.0f,-1.0f,   1.0f, 0.0f, 0.0f, -1.0f,-1.0f, 1.0f,
    1.0f, 1.0f, 0.0f, -1.0f, 1.0f, 1.0f,   0.0f, 1.0f, 1.0f, -1.0f, 1.0f,-1.0f,
};


const GLubyte CUBE_INDEX_ARRAY[] =
{
   0, 1, 2, 3,
	4, 5, 6, 7,
	5, 3, 2, 6,
	4, 7, 1, 0,
	7, 6, 2, 1,
	4, 0, 3, 5
};

const int NUM_CUBE_VERTICES = sizeof(CUBE_VERTEX_ARRAY) / (3*sizeof(GLfloat));
const int NUM_CUBE_INDICES  = sizeof(CUBE_INDEX_ARRAY) / sizeof(GLubyte);



//-----------------------------------------------------------------------------
// Name: drawCube()
// Desc: 
//-----------------------------------------------------------------------------
inline void drawCube()
{
   glEnableClientState(GL_VERTEX_ARRAY);
   glVertexPointer(3, GL_FLOAT, 0, CUBE_VERTEX_ARRAY2);

	glDrawArrays(GL_QUADS, 0, NUM_CUBE_VERTICES);
//   glDrawElements(GL_QUADS, NUM_CUBE_INDICES, GL_UNSIGNED_BYTE, 
//                  CUBE_INDEX_ARRAY);

   glDisableClientState(GL_VERTEX_ARRAY);
}


#endif // __CUBE_MODEL_H__